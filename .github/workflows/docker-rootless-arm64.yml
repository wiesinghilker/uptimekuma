name: Docker Rootless ARM64

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Upstream tag to build (e.g. v1.23.4)"
        type: string
        required: true

permissions:
  contents: read
  packages: write

jobs:
  build-rootless-arm64:
    name: Build rootless (arm64)
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout (stub repo)
        uses: actions/checkout@v4

      - name: Compute metadata
        id: meta
        shell: bash
        run: |
          set -euo pipefail
          tag="${{ github.event.inputs.tag }}"
          echo "tag=${tag}" >> "$GITHUB_OUTPUT"
          echo "image=ghcr.io/wiesinghilker/uptimekuma" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Clone upstream at tag
        shell: bash
        run: |
          set -euo pipefail
          git clone --depth 1 --branch "${{ steps.meta.outputs.tag }}" https://github.com/louislam/uptime-kuma.git
          cd uptime-kuma
          echo "Cloned upstream at tag ${{ steps.meta.outputs.tag }}"

      - name: Apply local patch
        shell: bash
        run: |
          set -euo pipefail
          cd uptime-kuma
          git apply --index --reject --whitespace=nowarn ../uncommitted-changes.patch
          echo "Applied uncommitted-changes.patch"

      - name: Build and push (rootless, linux/arm64)
        uses: docker/build-push-action@v6
        with:
          context: uptime-kuma
          file: uptime-kuma/docker/dockerfile
          target: rootless
          platforms: linux/arm64
          push: true
          tags: |
            ${{ steps.meta.outputs.image }}:latest
          provenance: false

      - name: Summary
        shell: bash
        run: |
          echo "Pushed image:" >> $GITHUB_STEP_SUMMARY
          echo "- ${{ steps.meta.outputs.image }}:latest (from upstream tag ${{ steps.meta.outputs.tag }}, with local patch)" >> $GITHUB_STEP_SUMMARY

